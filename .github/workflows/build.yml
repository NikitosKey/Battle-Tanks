name: build test and lint

on:
  push:
  pull_request:
    branches: [ main, dev ]

env:
  BUILD_TYPE: Debug

jobs:
  lint:
    runs-on: ubuntu-latest 

    steps:

    - uses: actions/checkout@v4

    - name: Install Deps
      run: |
        sudo apt-get update
        sudo apt-get install -y cppcheck clang-tidy
    - name: Get changed files
      id: changed_files
      run: |
        BASE_BRANCH="${{ github.base_ref || 'main' }}"
        git fetch origin $BASE_BRANCH
        CHANGED_FILES=$(git diff --name-only origin/$BASE_BRANCH...HEAD)
        echo "::set-output name=files::$CHANGED_FILES"

    - name: Run CMake lint on changed files
      if: ${{ steps.changed_files.outputs.files }}
      run: |
        for file in ${{ steps.changed_files.outputs.files }}; do
          if [[ $file == *.cmake || $file == CMakeLists.txt ]]; then
            echo "Linting $file with CMakeLint"
            cmakelint "$file"
          fi
        done

    - name: Run C++ lint (Cppcheck and Clang-Tidy) on changed files
      if: ${{ steps.changed_files.outputs.files }}
      run: |
        for file in ${{ steps.changed_files.outputs.files }}; do
          if [[ $file == *.cpp || $file == *.h ]]; then
            echo "Linting $file with Cppcheck and Clang-Tidy"
            cppcheck "$file" --enable=all --suppress=missingIncludeSystem
            clang-tidy "$file" -- -std=c++17
          fi
        done

  build:
    runs-on: ubuntu-latest 

    steps:

    - uses: actions/checkout@v4

    - name: Install Deps
      run: |
        sudo apt-get update
        sudo apt-get install build-essential libgl1-mesa-dev
        sudo apt install -y xvfb x11-utils libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 xdotool
        sudo apt install -y qt6-base-dev qt6-base-private-dev qt6-declarative-dev qt6-declarative-private-dev qt6-tools-dev qt6-tools-private-dev qt6-scxml-dev qt6-documentation-tools libqt6core5compat6-dev qt6-tools-dev-tools qt6-l10n-tools qt6-shader-baker libqt6shadertools6-dev qt6-quick3d-dev qt6-quick3d-dev-tools libqt6svg6-dev libqt6quicktimeline6-dev libqt6serialport6-dev 
        sudo apt install -y ninja-build clang cmake

    - name: Configure CMake
      run: |
        cmake . -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: ninja 

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: xvfb-run --auto-servernum ctest . -VV

